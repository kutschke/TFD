A repo to test the behaviour of TFileDirectory::mkdir with the
changes introduced in art v3.10

I opened an issue on art-root-io:  https://github.com/art-framework-suite/art-root-io/issues/9
and Kyle has suggested a solution that works.  To demo the solution:

```
setup mu2e
git clone https://github.com/kutschke/TFD
mkdir muse
cp TFD/u018 muse
muse setup -1 -q u018
muse build -j 8
art -c TFD/fcl/tfd5.fcl
```

Then inspect tfd5.root.  The code runs two modules, m1 and m2.  In m1 the histogram will
be in the top directory and in m2 it will be in a subdirectory named foo.

See below for the original content of this README; it describes the problem and explores
some deadends.

The modules TFD3 and TFD4 were dead ends. They turned out to be elaborate ways to
defeat the safety mechanisms of C++ and create a pointer/reference to an object
that will be deleted before it is used.

---------------------------------

Original content.

It contains two examples TFD1_module and TFD2_module.
I think that I understand why the first one works.
I don't understand why the second one works.

```
setup mu2e
git clone https://github.com/kutschke/TFD
mkdir muse
cp TFD/u018 muse
muse setup -1 -q u018
muse build -j 8
art -c TFD/fcl/tfd1.fcl
```

Then examine the file tfd1.root.
It should have two subdirectories, m1 and m2, one for each module instantiation.
Each of this will have two histograms h1 and foo/h2 .
The reason for two subdirectories is just to make sure that I am not doing
something that causes confusion if I instantiate two modules of the same module_type.

To run the second example:
art -c TFD/fcl/tfd2.fcl

This will make tfd2.root that has the same content as tfd1.root .

The difference between the two is that the first receieves the return value
of mkdir as a non-const rvalue reference,  the second as a const lvalue reference.
I don't understand two things in this case:
  - Does this code leak a temporary?  If not, who is deleting it?  Is there an invisible
    rvalue reference somewhere?

Bottom line: if TFD2 is legit, I know how to solve our problems.

Finally, if I modify TFD2 to make the tfdir a non-const lvalue reference, the code
fails to compile, as I expected.
